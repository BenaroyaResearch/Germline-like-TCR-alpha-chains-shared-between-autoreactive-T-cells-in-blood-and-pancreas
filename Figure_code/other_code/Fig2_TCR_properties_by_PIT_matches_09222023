rm(list = ls())
require(Biostrings)
require(limma)
require(plyr)
require(gdata)
library(reshape2)
library(psych)
library(ggplot2)
library(r2symbols)
library(stringdist)
library(scales)
library(Peptides)

setwd("/Users/peterlinsley/Desktop/PIT_TCR_paper_code/data") # folder containing data required to generate figures

## load TCRs

levIAR1 = read.csv("Levenshtein_index_IAR_CD4_with_islet_TCRS_lv.lt9.csv", stringsAsFactors = F)

lev = levIAR1

levSub = subset(lev, lv <2); nrow(levSub) # 1389

###########################
## Compare IMGT parameters

## compare segment sequence features for PIT matching and non-matching TRA chains

imgt = read.delim("/Users/peterlinsley/Dropbox/RNAseq/P91_Karen_Junbao/IMGT_all_TCRs/IAR_CD4_T_cell_all_seqs/3_Nt-sequences.txt", stringsAsFactors = F)

imgt$lenN = nchar(imgt$N.REGION) + nchar(imgt$N1.REGION)
imgt$juncLen = nchar(imgt$JUNCTION) 
imgt$threeVRegion = nchar(imgt$X3.V.REGION) 
imgt$fiveJRegion = nchar(imgt$X5.J.REGION) 
imgt$JRegion = nchar(imgt$J.REGION) 
imgt$cdr1 = nchar(imgt$CDR1.IMGT)
imgt$cdr2 = nchar(imgt$CDR2.IMGT)
imgt$cdr3 = nchar(imgt$CDR3.IMGT)
imgt$fr1 = nchar(imgt$FR1.IMGT)
imgt$fr2 = nchar(imgt$FR2.IMGT)
imgt$fr3 = nchar(imgt$FR3.IMGT)
imgt$fr4 = nchar(imgt$FR4.IMGT)

imgt$chainType = ifelse(imgt$V.GENE.and.allele %in% grep("TRA", imgt$V.GENE.and.allele, value = T), "TRA", 
					ifelse(imgt$V.GENE.and.allele %in% grep("TRB", imgt$V.GENE.and.allele, value = T), "TRB", "other"))

seqId = data.frame(strsplit2(imgt$Sequence.ID, split = "_"))
colnames(seqId) = c("libid", "junction")

imgt.df = data.frame(imgt$Sequence.ID, seqId$libid, imgt$chainType, seqId$junction, group = "IAR", imgt$juncLen)
colnames(imgt.df) = c("seqId", "libid", "chainType", "junction", "group","juncLen")

imgt.df$hydro = hydrophobicity( imgt.df$junction, scale = "Eisenberg")

#imgt.df$isletMatch = imgt.df$junction %in% levSub$aJunc1 # 573 TRUE
imgt.df$PITmatch = imgt.df$junction %in% levSub$aJunc1 # 573 TRUE
#imgt.df$PITmatch = factor(imgt.df$PITmatch, levels = c("TRUE", "FALSE"))

imgtTra = subset(imgt.df, chainType == "TRA") # 1606
imgtTrb = subset(imgt.df, chainType == "TRB") # 1562

traMatchT = subset(imgtTra,PITmatch == "TRUE") # 573
traMatchF = subset(imgtTra,PITmatch == "FALSE") # 1033

## identify subset of TRB chains that pair with PITmatched TRA chains & add PIT matching status for TRA chains

imgtTrb$PITmatch = ifelse(imgtTrb$libid %in% traMatchT$libid, "TRUE", "FALSE") # 492 TRUE, 1070 FALSE

trbMatchT = subset(imgtTrb,PITmatch == "TRUE") # 492
trbMatchF = subset(imgtTrb,PITmatch == "FALSE") # 1070

## summarize junction length and hydrophobicity

summary(traMatchT$juncLen) # 39 median 
summary(traMatchF$juncLen) # 42 median

summary(traMatchT$hydro) # 0.2333
summary(traMatchF$hydro) # 0.1853

summary(trbMatchT$juncLen) # 42
summary(trbMatchF$juncLen) # 42

summary(trbMatchT$hydro) # 0.09453
summary(trbMatchF$hydro) # 0.09379

## KS tests
test1 = ks.test(traMatchT$juncLen, traMatchF$juncLen, alternative = "two.sided"); test1 #p-value = 4.4e-16 for junction TRA; 
test2 = ks.test(traMatchT$hydro, traMatchF$hydro, alternative = "two.sided"); test2 #p-value = 2.692e-06 for hydro TRA;
test3 = ks.test(trbMatchT$juncLen, trbMatchF$juncLen, alternative = "two.sided"); test3 #p-value = 0.9681 for junction TRB; 
test4 = ks.test(trbMatchT$hydro, trbMatchF$hydro, alternative = "two.sided"); test4 #p-value = 0.3712 for hydro TRB; 

## use **** for both TRA juncLen and hydro; NS for both TRB juncLen and hydro

###################### 
## for TRA junctions

toPlotName = c("imgtTra")
toPlot = get(toPlotName) # select TRA or TRB chains

## Junction length

if(dev.cur()>1) dev.off()
quartz(width=11,height=8, dpi=72)  ### open plotting window
update_geom_defaults("line", aes(size = 2))
update_geom_defaults("point", aes(size = 2))

theme_set(theme_bw(36) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.key = element_blank()))

cbPalette = c('#66c2a5','#fc8d62', 'gray')

ggplot(toPlot, aes(x = juncLen)) + geom_density(aes(fill = PITmatch), alpha = 0.5, adjust = 1)
#last_plot() + theme(legend.spacing.y = unit(0.5, 'cm')) + guides(fill = guide_legend(byrow = TRUE))

xlab = "\nJunc length (nt)"
ylab = "Density\n"
last_plot() + labs(x = xlab, y = ylab)
last_plot() + geom_vline(xintercept = median(traMatchT$juncLen), lty = "solid")
last_plot() + geom_vline(xintercept = median(traMatchF$juncLen), lty = "dashed")
last_plot() + scale_fill_manual(values=cbPalette)

p = last_plot()

forLab = ggplot_build(p)

Y = 0.9*(max(forLab$data[[1]]$density))
X = 1*(min((forLab$data[[1]]$x)))

label = paste("KS test, \np-value =", scientific(test1$p.value, 2), sep = " ")
#last_plot() + annotate("text", X, Y, label = label, size = 8, hjust = 0)

p = last_plot()
setwd("/Users/peterlinsley/Desktop/PIT_TCR_paper_code/Figure_PDFs/")
filename = paste0("Fig2A_", toPlotName, "_junction_length_by_PITmatch.pdf") #TRA
#filename = paste0("Fig2B_", toPlotName, "_junction_length_by_PITmatch.pdf") #TRB

ggsave(filename, p)

## Hydrophobicity

if(dev.cur()>1) dev.off()
quartz(width=11,height=8, dpi=72)  ### open plotting window
update_geom_defaults("line", aes(size = 2))
update_geom_defaults("point", aes(size = 2))

theme_set(theme_bw(36) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.key = element_blank()))

cbPalette = c('#66c2a5','#fc8d62', 'gray')

ggplot(toPlot, aes(x = hydro)) + geom_density(aes(fill = PITmatch), alpha = 0.5, adjust = 1)

xlab = "\nHydrophobicity"
ylab = "Density\n"
last_plot() + labs(x = xlab, y = ylab)
last_plot() + geom_vline(xintercept = median(traMatchT$hydro), lty = "solid")
last_plot() + geom_vline(xintercept = median(traMatchF$hydro), lty = "dashed")
last_plot() + scale_fill_manual(values=cbPalette)

p = last_plot()

forLab = ggplot_build(p)

Y = 0.9*(max(forLab$data[[1]]$density))
X = 1*(min((forLab$data[[1]]$x)))

label = paste("KS test, \np-value =", scientific(test2$p.value, 2), sep = " ")
#last_plot() + annotate("text", X, Y, label = label, size = 8, hjust = 0)

p = last_plot()

setwd("/Users/peterlinsley/Desktop/PIT_TCR_paper_code/Figure_PDFs/")
filename = paste0("Fig2C_", toPlotName, "_hydrophobicity_by_PITmatch.pdf") #TRA
#filename = paste0("Fig2D_", toPlotName, "_hydrophobicity_by_PITmatch.pdf") #TRB

ggsave(filename, p)

 ######################
 ## plots for TRB junctions

 toPlotName = c("imgtTrb")
 toPlot = get(toPlotName) # select TRA or TRB chains

 ## Junction length

 if(dev.cur()>1) dev.off()
 quartz(width=11,height=8, dpi=72)  ### open plotting window
 update_geom_defaults("line", aes(size = 2))
 update_geom_defaults("point", aes(size = 2))

 theme_set(theme_bw(36) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.key = element_blank()))

 cbPalette = c('#66c2a5','#fc8d62', 'gray')

 ggplot(toPlot, aes(x = juncLen)) + geom_density(aes(fill = PITmatch), alpha = 0.5, adjust = 1)
 #last_plot() + theme(legend.spacing.y = unit(0.5, 'cm')) + guides(fill = guide_legend(byrow = TRUE))

 xlab = "\nJunc length (nt)"
 ylab = "Density\n"
 last_plot() + labs(x = xlab, y = ylab)
 last_plot() + geom_vline(xintercept = median(trbMatchT$juncLen), lty = "solid")
 last_plot() + geom_vline(xintercept = median(trbMatchF$juncLen), lty = "dashed")
 last_plot() + scale_fill_manual(values=cbPalette)

 p = last_plot()

 forLab = ggplot_build(p)

 Y = 0.9*(max(forLab$data[[1]]$density))
 X = 1*(min((forLab$data[[1]]$x)))

 label = paste("KS test, \np-value =", scientific(test1$p.value, 2), sep = " ")
 #last_plot() + annotate("text", X, Y, label = label, size = 8, hjust = 0)

 p = last_plot()
 setwd("/Users/peterlinsley/Desktop/PIT_TCR_paper_code/Figure_PDFs/")
 filename = paste0("Fig2B_", toPlotName, "_junction_length_by_PITmatch.pdf") #TRA

 ggsave(filename, p)

 ## Hydrophobicity

 if(dev.cur()>1) dev.off()
 quartz(width=11,height=8, dpi=72)  ### open plotting window
 update_geom_defaults("line", aes(size = 2))
 update_geom_defaults("point", aes(size = 2))

 theme_set(theme_bw(36) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.key = element_blank()))

 cbPalette = c('#66c2a5','#fc8d62', 'gray')

 ggplot(toPlot, aes(x = hydro)) + geom_density(aes(fill = PITmatch), alpha = 0.5, adjust = 1)

 xlab = "\nHydrophobicity"
 ylab = "Density\n"
 last_plot() + labs(x = xlab, y = ylab)
 last_plot() + geom_vline(xintercept = median(trbMatchT$hydro), lty = "solid")
 last_plot() + geom_vline(xintercept = median(trbMatchF$hydro), lty = "dashed")
 last_plot() + scale_fill_manual(values=cbPalette)

 p = last_plot()

 forLab = ggplot_build(p)

 Y = 0.9*(max(forLab$data[[1]]$density))
 X = 1*(min((forLab$data[[1]]$x)))

 label = paste("KS test, \np-value =", scientific(test2$p.value, 2), sep = " ")
 #last_plot() + annotate("text", X, Y, label = label, size = 8, hjust = 0)

 p = last_plot()

 setwd("/Users/peterlinsley/Desktop/PIT_TCR_paper_code/Figure_PDFs/")
 filename = paste0("Fig2D_", toPlotName, "_hydrophobicity_by_PITmatch.pdf") #TRA

 ggsave(filename, p)






