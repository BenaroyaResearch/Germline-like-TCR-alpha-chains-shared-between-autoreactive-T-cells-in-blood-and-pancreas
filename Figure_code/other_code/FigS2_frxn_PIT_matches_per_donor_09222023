rm(list = ls())
require(Biostrings)
require(limma)
require(plyr)
require(readxl)
library(reshape2)
library(psych)
library(ggplot2)
library(r2symbols)
library(stringdist)

setwd("/Users/peterlinsley/Desktop/PIT_TCR_paper_code/data") # folder containing data required to generate figures

## load matches

levIAR1 = read.csv("Levenshtein_index_IAR_CD4_with_islet_TCRS_lv.lt9.csv", stringsAsFactors = F)

filename = ("Levenshtein_index_P324_P474_IAR_CD4_with_islet_TCRS_lv.lt6.csv")

levIAR2 = read.csv(filename, stringsAsFactors = F)

levSubIAR1 = subset(levIAR1, levIAR1$lv <2); nrow(levSubIAR1) # 1389 (573 unique) with IAR1; 1343 (555 unique(with IAR2)
levSubIAR2 = subset(levIAR2, levIAR2$lv <2); nrow(levSubIAR2) # 1389 (573 unique) with IAR1; 1343 (555 unique(with IAR2)

## load IAR1 TCRs

IAR1Tcrs = read.csv("201512_TCR_MasterList_w_CloneIDs.csv", stringsAsFactors = F) # 5417
colnames(IAR1Tcrs) = gsub("tcrGraph_sharing_level", "sharing_level", colnames(IAR1Tcrs))

IAR1Tcrs = data.frame(IAR1Tcrs, set = "IAR1")

colNames = c("libid", "v_gene", "j_gene", "junction", "project", "donor_id", "set", "study_group")

IAR1Tcrs = IAR1Tcrs[c(colNames)]
IAR1Tcrs$study_group = gsub("early onset T1D", "newT1D", IAR1Tcrs$study_group)

## create IAR1 hla

hla = read_excel("subject_char_w_HLA.xlsx")

## correct donor id

hla$'Subject ID' = gsub('TID', "T1D", hla$'Subject ID')

## load ID key

idKey = read_excel("P91_P168 Sample_ID_key.xlsx")

idKey$tcrId = gsub("HC10, Ctrl10", "CTRL10", idKey$tcrId)

## remove whitespace

hla$'Subject ID' = stringr::str_trim(hla$'Subject ID')
idKey$suppTabId = stringr::str_trim(idKey$suppTabId)
IAR1Tcrs$donor_id = stringr::str_trim(IAR1Tcrs$donor_id)

## add suppTabId and then match HLA

IAR1Tcrs$suppTabId = idKey$suppTabId[match(IAR1Tcrs$donor_id, idKey$tcrId)]
IAR1Tcrs$hla = hla$DRB1[match(IAR1Tcrs$suppTabId, hla$"Subject ID")]

## check to see that HLA is present for most donos

temp = subset(IAR1Tcrs, is.na(IAR1Tcrs$hla)) # 0/5417. 
unique(temp$donor_id) #0

tempa = subset(hla, hla$"Subject ID" == "CTRL10")
tempb = subset(IAR1Tcrs, IAR1Tcrs$donor_id == "CTRL10")

tempa$'Subject ID'
unique(tempb$donor_id)

colNames1 = c("libid", "v_gene", "j_gene", "junction", "project", "donor_id", "set", "study_group", "hla")

IAR1Tcrs = IAR1Tcrs[c(colNames1)] # 5417

## load IAR2 TCRs

anno.filename = "P325_P474_comb_CD4+_anno_w_hla.txt"
tcrs.filename = "P325_P474_comb_CD4+_TCR_w_hla.txt"

test1 = read.delim(anno.filename, stringsAsFactors = F)
test2 = read.delim(tcrs.filename, stringsAsFactors = F)

test2$donor_id = test1$donorId[match(test2$libid, test1$libid)]
test2$study_group = test1$studyGroup2[match(test2$libid, test1$libid)]
test2$study_group = gsub("roT1D", "newT1D", test2$study_group)

test2 = subset(test2, !study_group == "estT1D")

#test2$study_group2 = ifelse(test2$study_group %in% c("1AAb", "2AAb"), "AAbPos", 
#						ifelse(test2$study_group %in% c("newT1D"), "newT1D", 
#						ifelse(test2$study_group %in% c("AAbNeg"), "HC", "other")))
#test2$study_group = test2$study_group2

IAR2Tcrs = data.frame(test2, set = "IAR2")
IAR2Tcrs$hla = test1$hla[match(IAR2Tcrs$donor_id, test1$donorId)]

colNames = c("libid", "v_gene", "j_gene", "junction", "project", "donor_id", "set", "study_group", "hla")

IAR2Tcrs = IAR2Tcrs[c(colNames)] # 2310

## combine set 1 amd set2

tcrsComb = rbind(IAR1Tcrs, IAR2Tcrs) # 7727

tcrsComb$studyGroup = tcrsComb$study_group

tcrsComb$studyGroup = factor(tcrsComb$studyGroup, levels = c("HC", "AAbNeg", "1AAb", "2AAb",  "newT1D", "T1D" ))

## subset tcrsComb by HLA-DRB1*04 if desired

#tcrsComb = subset(tcrsComb, tcrsComb$hla %in% grep("04", tcrsComb$hla, value = T)) # 3626 for "04"; 4101 for NOT 04

## determine expanded TCRs

no =  ddply(tcrsComb,.(junction), plyr::summarize, sum = length(libid)) # sum(no$sum) = 7727

cut <- 2
no.sub = subset(no, sum>=cut) # 474

E = subset(tcrsComb, junction %in% no.sub$junction) # 1672 E junctions, 756 unique for all donors. 
libs = E$libid
E.cell = subset(tcrsComb, libid %in% E$libid) #1954
E.cell$study_group = tcrsComb$study_group[match(E.cell$libid, tcrsComb$libid)] # 1954
	
frxn.e = length(unique(E.cell$libid))/length(unique(tcrsComb$libid)) # 24.4%
	
table(E.cell$studyGroup)

#HC AAbNeg   1AAb   2AAb newT1D    T1D 
#   284     23     56    101    812    678 # for all donors

## add expanded cells to tcrsComb

tcrsComb$E = tcrsComb$libid %in% E.cell$libid # 1954 TRUE all donors; 
tcrsComb$expanded = tcrsComb$E 
tcrsComb$expanded = gsub("TRUE", "E", tcrsComb$expanded)
tcrsComb$expanded = gsub("FALSE", "NE", tcrsComb$expanded)

tcrsComb$chainType = ifelse(tcrsComb$v_gene %in% grep("TRA", tcrsComb$v_gene, value = T), "TRA",
						ifelse(tcrsComb$v_gene %in% grep("TRB", tcrsComb$v_gene, value = T), "TRB","other"))

## remove iNKT and MAIT cell sequencces

iNkt1 = subset(tcrsComb, junction == "CVVSDRGSTLGRLYF")
iNkt2 = subset(tcrsComb, libid %in% iNkt1$libid)
mait1 = subset(tcrsComb, v_gene == "TRAV1-2" & (j_gene == "TRAJ33" | j_gene == "TRAJ20" | j_gene == "TRAJ12")) # 18
mait2 = subset(tcrsComb, libid %in% mait1$libid) # 25

tcrsCombSub3 = subset(tcrsComb, !junction %in% iNkt2$junction) # 
tcrsCombSub3 = subset(tcrsCombSub3, !junction %in% mait2$junction) # 7633

tcrsCombSub3.u = tcrsCombSub3[!duplicated(tcrsCombSub3$junction),] # 6481
tcrsTra = subset(tcrsCombSub3.u, chainType == "TRA") # 3264
tcrsTrb = subset(tcrsCombSub3.u, chainType == "TRB") # 3187

#setwd("/Users/peterlinsley/Dropbox/RNAseq/P91_Karen_Junbao/combined_P91_P168_P325_P474")
#filename = "combined_IAR1_IAR2_TCRs_filtered_DRB1_04_only.csv"
#write.csv(tcrsCombSub3, filename)

##################################
## violin plots junctions per donor

tcrsCombSub3$PITmatch = tcrsCombSub3$junction %in% levSubIAR1$aJunc1 | tcrsCombSub3$junction %in% levSubIAR2$aJunc1 # 930 T, 4842 F
tcrsCombSub3$PITmatch = gsub("TRUE", "PIT-matched", tcrsCombSub3$PITmatch)
tcrsCombSub3$PITmatch = gsub("FALSE", "PIT-non-matched", tcrsCombSub3$PITmatch)
tcrsCombSub3$PITmatch = factor(tcrsCombSub3$PITmatch, levels = c("PIT-matched", "PIT-non-matched"))
tcrsCombSub3$study_group = gsub("AAbNeg", "HC", tcrsCombSub3$study_group)

tcrsCombSub3$study_group = factor(tcrsCombSub3$study_group, levels = c("HC", "1AAb",  "2AAb", "newT1D", "T1D"))
tcrsCombSub3$expanded = factor(tcrsCombSub3$expanded, levels = c("E", "NE")) # 1880 E, 5753 NE

dr4 = subset(tcrsComb, tcrsComb$hla %in% grep("04", tcrsComb$hla, value = T)) # 3626 for "04"; 4101 for NOT 04

## focus on TRA chains

tcrsCombSub3Tra = subset(tcrsCombSub3, tcrsCombSub3$chainType == "TRA") # 3907
tcrsCombSub3Tra.u = tcrsCombSub3Tra[!duplicated(tcrsCombSub3Tra$junction),] # 3264

## select PIT match and expanded groups

tcrsCombSub3Tra = subset(tcrsCombSub3Tra, expanded == "E"); nrow(tcrsCombSub3Tra) #1000

## tally numbers per donor

#toUse = subset(tcrsCombSub3Tra, set == "IAR1")
toUse = tcrsCombSub3Tra

noPerDonor = ddply(toUse,.(study_group, PITmatch, donor_id, expanded, hla), plyr::summarize, sum = length(donor_id))
#noPerStudyGroup = ddply(tcrsCombSub3Tra,.(study_group), plyr::summarize, sum = length(unique(donor_id)))

colnames(noPerDonor) = gsub("sum", "sumPITmatch", colnames(noPerDonor))

## add total cells per donor

#totCells = subset(toUse, tcrsCombSub3$chainType == "TRA")

totNoPerDonor =  ddply(toUse,.(donor_id, chainType), plyr::summarize, sum = length(donor_id))

## calculate fractions

noPerDonor$total = totNoPerDonor$sum[match(noPerDonor$donor_id, totNoPerDonor$donor_id)]

noPerDonor$frxnPITmatch = noPerDonor$sumPITmatch/noPerDonor$total

## for plots
donorSub = noPerDonor
donorSub$DRB1 = ifelse(donorSub$donor_id %in% dr4$donor_id, "DRB1-04", "other")

gt10 = subset(noPerDonor, total >=10)

## check whether small cell yields affect results

#donorSub = subset(donorSub, donor_id %in% gt10$donor_id) # to 49 from 81

## plot frxn E cells versus study group

library(ggsignif)

if(dev.cur()>1) dev.off()
quartz(width=16,height=9, dpi=72)  ### open plotting window
update_geom_defaults("line", aes(size = 0.5))
update_geom_defaults("point", aes(size = 2))

theme_set(theme_bw(36) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.key = element_blank()))

cbPalette = c('#66c2a5','#fc8d62', 'gray')

ggplot(donorSub, aes(x = study_group, y = frxnPITmatch)) + geom_violin(draw_quantiles = c(0.5), stat = "ydensity", position = "dodge", fill = "#eeeeee", lwd = 1.5) + facet_grid(~PITmatch)

last_plot() + geom_dotplot(data = donorSub, aes(x = study_group, y = frxnPITmatch, fill = DRB1), position = "identity", method = "histodot", binaxis = "y", stackdir = "center", dotsize = 0.5) 

last_plot() + scale_fill_manual(values=cbPalette)
last_plot() + theme(axis.text.x=element_text(angle=45, hjust=1))

ymax = max(donorSub$frxnPITmatch)
ymin = min(donorSub$frxnPITmatch)
last_plot() + scale_y_continuous(limits = c(0, ymax+0.2)) # for add 1 for stats. Only fyrst two tests have p-values <0.05

#last_plot() + geom_signif(comparisons = list(c("HC", "1AAb")), textsize = 8, y_position = ymax, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F)) # p-value = 0.043
#last_plot() + geom_signif(comparisons = list(c("HC", "2AAb")), textsize = 8, y_position = ymax+0.1, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F)) #p-value = 0.028
#last_plot() + geom_signif(comparisons = list(c("HC", "newT1D")), textsize = 8, y_position = ymax+0.2, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))
#last_plot() + geom_signif(comparisons = list(c("HC", "T1D")), textsize = 8, y_position = ymax+0.3, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))

#last_plot() + geom_signif(comparisons = list(c("1AAb", "2AAb")), textsize = 8, y_position = ymax+0.4, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))
#last_plot() + geom_signif(comparisons = list(c("1AAb", "newT1D")), textsize = 8, y_position = ymax+0.5, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))
#last_plot() + geom_signif(comparisons = list(c("1AAb", "T1D")), textsize = 8, y_position = ymax+0.6, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))

#last_plot() + geom_signif(comparisons = list(c("2AAb", "newT1D")), textsize = 8, y_position = ymax+0.7, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))
#last_plot() + geom_signif(comparisons = list(c("2AAb", "T1D")), textsize = 8, y_position = ymax+0.8, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))

#last_plot() + geom_signif(comparisons = list(c("HC", "2AAb")), textsize = 8, y_position = ymax+0.9, map_signif_level = F, test = "wilcox.test", test.args=list(alternative = "less", var.equal = T, paired=F))

last_plot() + theme(axis.text.x=element_text(angle=45, hjust=1))

xlab = "\nGroup"
ylab = "PIT matches, \nfraction IAR cells per donor\n"
last_plot() + labs(x = xlab, y = ylab)

p = last_plot()

setwd("/Users/peterlinsley/Desktop/PIT_TCR_paper_code/Figure_PDFs/")
filename = paste0("FigS2_fraction", "_PIT_matches_per_donor_E_TCRs.pdf")
ggsave(filename, p)